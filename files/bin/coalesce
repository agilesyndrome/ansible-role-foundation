#!/bin/bash
# Do not 'set -e' or '-o pipefail' in this script! It is designed for failure 

var_name=${1}
shift;
sources=${@}

function check_env {
    # VAR Names are Uppercase, Hypen separated
    ENV_VAR=$(echo ${1} | tr '[:lower:]' '[:upper:]' | sed 's/[^[:alnum:]]/_/g')
    echo ${!ENV_VAR}
}

function check_param {
    # Param Names are prefixed with Project and Environment:
    param read ${1}
}

function check_secret {
    # Param Names are prefixed with Project and Environment:
    secret read ${Project}/${Environment}/${1}
}

LAST_ARG=${@: -1}
for s in ${sources}; do
    RETURN_VALUE=$(check_$s ${var_name} 2> /dev/null)
    if [ -n "${RETURN_VALUE}" ]; then
        echo ${RETURN_VALUE}
        exit 0
    fi
done;

#Return last value if it is not a valid check
echo ${LAST_ARG} | sed -E -e 's/^(env|param|secret)$//'