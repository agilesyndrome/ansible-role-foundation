#!/bin/bash

set -e
set -o pipefail

action=${1}
param1=${2}
param2=${3}

CONFIRM_PATTERN=".*--confirm$"

if [ -z "${Project}" ]; then
  echo "Could not determine Project! Are you sure Env/Tag Project is set?"
  exit 1
fi

function require {
  if [ -z "${!1}" ]; then
        echo "----------------------------------"
	echo "Error> Parameter "${1}" is required."
	secret_help ${2}
	exit 1
  fi

}

secret_id="The name of the secret"
optional_secret_part="The JSON key of the secret to read"


function usage_helper {
	printf '=%.0s' {1..50}
	echo ""
	echo "${1} :: ${2}"
	printf '=%.0s' {1..50}
	echo ""
	echo ""
	echo "Usage: secret ${1} ${HELP_ARGS[@]}"
	echo ""
	for usageParam in ${HELP_ARGS[@]};
	do
		echo "  ${usageParam} :: ${!usageParam}"
	done
	
	echo ""
	echo "Example: "
	echo "   secret ${1} ${3}"

	#Support optional examples
	if [ -n "${4}" ]; then
		echo "   secret ${1} ${4}"
	fi
	echo ""
}

function secret_help {

HELP_ARGS=(secret_id)

case "${1}" in
read)
	HELP_ARGS=(secret_id optional_secret_part)
	usage_helper "read" "show a secret value" "db.port" "sub/secret hostname"
	;;
scope)
	HELP_ARGS=(optional_param_id)
	usage_helper "scope" "show full AWS Secret key value" ""
	;;
*)
	echo "Usage: secret"
	echo "  read                   :: Read a secret"
    echo "  scope                  :: Show full secret name"
	;;
esac
}

function set_secret_scope {
	base="${2:-${Project}/${Environment}}"
	SECRET_SCOPE=$(echo ${base}/${1})
	export SECRET_SCOPE=${SECRET_SCOPE%/}
}

function secret_read {
	if [ -n "${param2}" ]; then
		#secret read secret_name secret_part
		set_secret_scope ${param1}
		aws secretsmanager get-secret-value --secret-id ${SECRET_SCOPE} --query "SecretString" | jq -r " fromjson| .${param2}"
	else
		#secret read hostname
		aws secretsmanager get-secret-value --secret-id ${SECRET_SCOPE} --query "SecretString" | jq -r " fromjson| .${param1}"
	fi
	
}

function secret_scope {
	echo "${SECRET_SCOPE}"
}

require action
shift;

#Secret name is always the last argument
set_secret_scope
secret_"${action}" "$@"
